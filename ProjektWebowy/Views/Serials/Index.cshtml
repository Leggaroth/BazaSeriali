@model PaginatedList<ProjektWebowy.Models.Serial>
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Create">Create New</a>
    }
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <label>Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /></label>
            <select name="categoryId">
            <option  value="">All Categories</option>
            @foreach (var category in ViewBag.Categories as List<Category>)
            {
                    <option value="@category.Id" selected="@(ViewBag.SelectedCategoryId != null && (int)ViewBag.SelectedCategoryId == category.Id ? "selected" : null)">
                        @category.Name
                    </option>
            }
        </select>

            <input type="submit" value="Search" class="btn btn-default" /> 
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]">Title</a>
            </th>
            <th>
                Description
            </th>
            <th>
                Release Year
            </th>
            <th>
                Category
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ScoreSortParm"]">Average Score</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">
                    @Html.DisplayFor(modelItem => item.Title)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                    @string.Format("{0:F2}", item.AvgRating)
            </td>
            <td>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-categoryId="@ViewData["CategoryFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-categoryId="@ViewData["CategoryFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>